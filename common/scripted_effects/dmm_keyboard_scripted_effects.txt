dmm_keyboard_get_idle_country = {
	if = {
		limit = {
			NOT = {
				any_country = {
					has_country_flag = dmm_keyboad_country
					has_country_flag = dmm_keyboad_idle_country
				}
			}
		}
		dmm_keyboard_create_country = yes
	}
	random_country = {
		limit = {
			has_country_flag = dmm_keyboad_country
			has_country_flag = dmm_keyboad_idle_country
		}
		remove_country_flag = dmm_keyboad_idle_country
		save_event_target_as = dmm_keyboard_country
	}
}

dmm_keyboard_create_country = {
	if = {
		limit = {
			NOT = {
				exists = event_target:dmm_global_species
			}
		}
		create_species = {
			class = MOL
			portrait = mol17
			effect = {
				save_global_event_target_as = dmm_global_species
			}
		}
	}
	create_country = {
		type = dmm_global_country
		name = "DMM Keyboard Event Country"
		species = event_target:dmm_global_species
		effect = {
			save_event_target_as = dmm_keyboard_country
			set_country_flag = dmm_keyboad_idle_country
			set_country_flag = dmm_keyboad_country
		}
	}
}

# this = dmm keyboard country
dmm_keyboard_create_leader = {
	create_leader = {
		class = general
		species = event_target:dmm_global_species
		immortal = yes
		effect = {
			set_leader_flag = dmm_keyboard_idle
		}
	}
}

# this = dmm keyboard country
# remove idle 
dmm_keyboard_get_idle_leader = {
	if = {
		limit = {
			NOT = {
				any_owned_leader = {
					has_leader_flag = dmm_keyboard_idle
				}
			}
		}
		dmm_keyboard_create_leader = yes
	}
	random_owned_leader = {
		limit = {
			has_leader_flag = dmm_keyboard_idle
		}
		remove_leader_flag = dmm_keyboard_idle
		save_event_target_as = dmm_keyboard_leader
	}
}

# this = leader
dmm_keyboard_free_leader = {
	set_leader_flag = dmm_keyboard_idle
	clear_variable = dmm_keyboard_name_length
}

# this = country
dmm_keyboard_add_letter = {
	event_target:dmm_keyboard_country = {
		dmm_keyboard_get_idle_leader = yes
		event_target:dmm_keyboard_leader = {
			set_name = "[dmm_keyboard_current_leader.GetName]"
			set_variable = {
				which = dmm_keyboard_name_length
				value = event_target:dmm_keyboard_current_leader
			}
			prev = {
				set_leader = prev
			}
		}
	}
	event_target:dmm_keyboard_current_leader = {
		change_variable = {
			which = dmm_keyboard_name_length
			value = 1
		}
	}
}

# this = country
dmm_keyboard_remove_letter = {
	hidden_effect = {
		event_target:dmm_keyboard_country.ruler = {
			# save_event_target_as = dmm_keyboard_current_leader
			dmm_keyboard_free_leader = yes
		}
		event_target:dmm_keyboard_current_leader = {
			set_name = "[dmm_keyboard_country.ruler.GetName]"
			subtract_variable = {
				which = dmm_keyboard_name_length
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = dmm_keyboard_name_length
						value > 0
					}
				}
				subtract_variable = {
					which = dmm_keyboard_name_length
					value = 1
				}
				dmm_keyboard_get_previous_leader = yes
				change_variable = {
					which = dmm_keyboard_name_length
					value = 1
				}
			}
		}
	}
}

# dmm_keyboard_get_next_leader = {
# 	event_target:dmm_keyboard_current_leader = {
# 		save_event_target_as = dmm_keyboard_previous_leader
# 	}
# 	event_target:dmm_keyboard_country = {
# 		dmm_keyboard_get_idle_leader = yes
# 		event_target:dmm_keyboard_leader = {
# 			set_variable = {
# 				which = dmm_keyboard_name_length
# 				value = event_target:dmm_keyboard_current_leader
# 			}
# 			change_variable = {
# 				which = dmm_keyboard_name_length
# 				value = 1
# 			}
# 			save_event_target_as = dmm_keyboard_current_leader
# 		}
# 	}
# }
# this = leader
# assume dmm_keyboard_name_length > 0
dmm_keyboard_get_previous_leader = {
	event_target:dmm_keyboard_country = {
		random_owned_leader = {
			limit = {
				is_variable_set = dmm_keyboard_name_length
				check_variable = {
					which = dmm_keyboard_name_length
					value = prevprev
				}
			}
			prev = {
				set_leader = prev
			}
			# save_event_target_as = dmm_keyboard_previous_leader
		}
	}
}

# # this = leader
# dmm_keyboard_generate_next_letter = {
# 	dmm_keyboard_generate_next_letter_aux = {
# 		LETTER = c
# 	}
# 	dmm_keyboard_generate_next_letter_aux = {
# 		LETTER = e
# 	}
# 	dmm_keyboard_generate_next_letter_aux = {
# 		LETTER = C
# 	}
# 	dmm_keyboard_generate_next_letter_aux = {
# 		LETTER = E
# 	}
# }
# # this = leader
# dmm_keyboard_generate_next_letter_aux = {
# 	owner = {
# 		dmm_keyboard_get_idle_leader = yes
# 	}
# 	event_target:dmm_keyboard_leader = {
# 		set_name = "[Prev.GetName]$LETTER$"
# 		set_variable = {
# 			which = dmm_keyboard_name_length
# 			value = prev
# 		}
# 		change_variable = {
# 			which = dmm_keyboard_name_length
# 			value = 1
# 		}
# 		save_event_target_as = dmm_keyboard_leader_$LETTER$
# 	}
# }