Ever felt like your edicts list becomes cluttered by edicts whose sole purpose is to open the settings of a mod? Here is a lightweight weight and performance-friendly mod that can solve that issue!

[h1]For players[/h1]
This mod adds a button on the main menu (opened up by pressing escape) that opens the Mod Menu. You can then select the mod you want to access the settings of. Simple right?
The mods simply have to register themselves. If you don't see the mod you're looking for, you can [b]kindly[/b] ask its modder to come see this mod description, so they can see if they want to make their mod register itself.
Place this mod right at the bottom of your load order. (Yes, below any mod touching the UI).
This mod changes checksum and had nearly no compatibility issues (placing it at the bottom of the load order will solve most of the remaining ones anyway).
This mod is save game compatible.

[h1]For modders[/h1]
Welcome! The configuration is really straightforward, don't be afraid ;)
DMM works in 2 part:
[olist]
[*] Your mod needs to register itself (give a unique flag and the text that should displayed on the button)
[*] You need to add a country_event and subscribe it to an on_action
[/olist]

[h2]Registering the mod[/h2]
At game start and on save game load (use on_actions), execute this effect:
[code]
    dmm_register_mod = {
        DMM_NAME = my_amazing_mod.22
        DMM_FLAG = my_amazing_mod_unique_flag
    }
[/code]
Replace "my_amazing_mod.22" by what you want displayed on the button. I highly recommend using a localisation key.
Replace "my_amazing_mod_unique_flag" by something that is unique to your mod. I highly recommend using at least the full name of the mod ("origin_mod" is not enough!).
DO NOT put any spaces. You've been warned! If you want spaces in the text displayed on the button, you have to use a localisation key.

[h2]Adding the event and the on_action[/h2]
Simply add this event (as usual don't forget the namespace):
[code]
    country_event = {
        id = my_amazing_namespace.111
        is_triggered_only = yes
        hide_window = yes
        trigger = {
            from = {
                has_leader_flag = my_amazing_mod_unique_flag
            }
        }
        immediate = {
            # open my settings menu
        }
    }
[/code]
Of course reuse the same flag name you set before. In the immediate, you can for example fire the event that opens up your settings menu.

And subscribe the previous event to this on_action:
[code]
    dmm_mod_selected = {
        events = {
            my_amazing_namespace.111
        }
    }
[/code]

And that's it! Yes! 22 lines of code only! Now you don't need an edict anymore!
If you don't want to add a hard dependency on DMM (ie you don't want to set it as required), but only want to add a soft dependency, you can add an edict (that fires your settings menu) that is only visible if DMM is not installed.
To do that, put in the potential clause :
[code]
NOT = {
    has_global_flag = dmm_installed
}
[/code]

Here's a bunch of utility stuff:
If for you want to unregister your mod (for example before the player uninstall it), simply use dmm_deregister_mod = { DMM_FLAG = my_amazing_mod_unique_flag }.
You can check if your mod is registered using dmm_is_registered_mod = { DMM_FLAG = my_amazing_mod_unique_flag }.

[h1]Template for settings menu[/h1]
You probably know it, GUI modding in Stellaris is quite hard and annoying. But having a good looking event is really nice. So I created a template you can freely use and change!
Warning: while using this template is imho easier than learning gui modding and trying stuff out, it still require a basic knowledge of events and some efforts (I won't hold your hand as for the configuration above: you're gonna have to look at the template to understand).
On another note: you are welcome to modify the template to suit your needs (please credit :P). Just make sure to change the name of all of the elements you change so that you don't affect another mod using the default template.

Take a look of the dmm_template.0 event and use it as base (if you didn't download the mod, you can find it on [url=https://github.com/calniotrey/dynamic-mod-menu/blob/master/events/dmm_template_events.txt]github[/url])
First thing to notice:
	diplomatic = yes
	custom_gui = "dmm_template_window"
Then come all of the options. They can be separated in 3:
[list]
[*] The submenus. Use them to open another page of the settings menu. One of them should be disabled (because you are currently in it), the other will fire similar events (same gui, different options).
[*] The settings. They are divided in left and right settings. On each side, there is a text and then either a checkbox or a button.
[*] The close option. default_hide_option = yes makes it selected when pressing escape.
[/list]

The submenus should be pretty straightforward, just keep in mind to increment the number in custom_gui = "dmm_template_submenu_0" for each of them (start at 0, up to f in hexadecimal).
The close option should also be straightforward. You can also make it fire the DMM event if you want to (country event dmm_events.0).

The settings:
As previously stated, there is a left and a right part. You basically order your options as: left text, left button/checkbox, right text, right button/checkbox/dummy (more on that right after).
To mark a new line, you have to have a right button/checkbox/dummy. That gui generates the new line.
If you don't want a button or a checkbox, use a dummy (custom_gui = "dmm_template_right_dummy") with no text.
As you can probably tell, the checkbox can either be checked or unchecked. You probably want to have 2 options (one with each), mutually exclusive that switch between each other.

What isn't in the template (for more lisibility) is that each setting (except the close) should refire the same event.

[h1]Credits[/h1]
Thanks to Mario for allowing me to use this mod name.
Thanks to The Stellaris Modding Den and mr_trousers.

[h1]Legal Stuff[/h1]
Do not copy any content from this mod without permission. This includes modpacking of course (instead do a steam collection and let your user merge locally).
You have my permission to use the template (event and gui code). Make sure to rename the elements if you change them. Please credit ;)